{"mappings":"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","sources":["src/read-main.js","src/js/read.js"],"sourcesContent":["import './js/header';\nimport './js/read';\n","//-------Maks & Serj--------------\nimport {\n  loadReadStorage,\n  removeFromReadStorage,\n  getCurrentDate,\n} from './read-library';\n\nimport { creatCardMarkup } from './creatCardMarkup';\nimport { includeFavoriteNew, excludeFavoriteNew } from './library';\n\nlet noResultsText = 'The read news list is empty';\nconst footerEl = document.querySelector('.footer');\nconst headerEl = document.querySelector('.header');\nconst box = document.querySelector('.wrap-box ');\nconst loader = document.querySelector('.loader-container');\n\ncreateReadMarkup();\n\nfunction createReadMarkup() {\n  const readObj = loadReadStorage();\n  const keys = Object.keys(readObj);\n  const emptyreadObj = !Object.keys(readObj).length;\n\n  // Проверка, если пустой объект, то заглушка.\n  if (emptyreadObj) {\n    renderNoNews(noResultsText);\n  } else {\n    for (const date of keys) {\n      // массивы объектов по датам readObj[date]\n      // Удаление пустого массива из Л.С.\n      if (readObj[date].length === 0) {\n        delete readObj[date];\n\n        localStorage.setItem('read', JSON.stringify(readObj));\n        location.reload();\n      }\n\n      createDateBox(date);\n    }\n\n    for (const date of Object.keys(readObj)) {\n      const box = document.querySelector(`[data-date=\"${date}\"]`);\n      const wrapList = document.getElementById(`${date}`);\n      const murkupForBox = createMurkupForBoxItem(date);\n\n      wrapList.insertAdjacentHTML('beforeend', murkupForBox.join(''));\n    }\n  }\n}\nsetTimeout(() => {\n  loader.classList.add('is-hidden');\n}, 500);\n\nfunction createDateBox(date) {\n  const wrapBox = document.querySelector('.wrap-box');\n  const murkup = `<div data-date=\"${date}\" class=\"dateList-wrap\">\n    <div class=\"span-wrap\">\n      <span class=\"date-span open\">${date}<span class=\"arrow\"></span></span>\n    </div>\n    <ul class=\"wrap-list box-news open\" id=\"${date}\"></ul>\n  </div>`;\n\n  const makeMurkup = wrapBox.insertAdjacentHTML('afterbegin', murkup);\n\n  return;\n}\n// Массив разметки.\nfunction createMurkupForBoxItem(date) {\n  const readObj = loadReadStorage();\n  const getKeyValue = readObj[date]; //массив из объектов\n\n  const createMurkup = getKeyValue.map(el => {\n    const { abstract, title, url, published_date, image_url, section, id } = el;\n\n    const data = published_date.split('-').reverse().join('/');\n\n    return creatCardMarkup(el);\n  });\n\n  return createMurkup;\n}\n\nconst dateSpans = document.querySelectorAll('.date-span');\ndateSpans.forEach(dateSpan => {\n  dateSpan.addEventListener('click', function () {\n    // Отримати ідентифікатор 'id' елемента <ul> за допомогою атрибуту 'id'\n    const id = this.parentElement.parentElement.querySelector('ul').id;\n    // Отримати елемент <ul> а допомогою ідентифікатора 'id'\n    const list = document.getElementById(id);\n    const arrow = dateSpan.querySelector('.arrow');\n    arrow.classList.toggle('arrow-bot');\n    list.classList.toggle('open');\n  });\n});\n\nbox.addEventListener('click', onButtonFavorite);\n\n// ----------------------------------------------------------\n// Без этих функций сердечки не проставляются на нашей странице\n// если массив посылать в favorite-btn-action, то он конфликтует с присланым массивом из news-list\n\nfunction onButtonFavorite(e) {\n  if (e.target.closest('BUTTON')) {\n    // кнопка\n    const favButton = e.target.closest('BUTTON');\n    // ацдишка li\n    const favId = favButton.closest('li').dataset.id;\n    // надпись на кнопке  Add to Favorite\n    const favP = favButton.querySelector('.box-news__favorite-p');\n    // svg\n    const favSvg = favButton.querySelector('.box-news__favorite-svg');\n\n    if (favButton.classList.contains('favorite')) {\n      offColorBtn(favButton, favId, favP, favSvg);\n    } else {\n      onColorBtn(favButton, favId, favP, favSvg);\n    }\n  }\n}\n\n// Массив объектов getArray\n\nfunction offColorBtn(favButton, favId, favP, favSvg) {\n  for (const el of getArray()) {\n    if (el.id === favId) {\n      const resultDel = excludeFavoriteNew(el.id);\n\n      if (resultDel) {\n        favButton.classList.remove('favorite');\n        favP.classList.remove('favorite-p');\n        favSvg.classList.remove('favorite-svg');\n        favP.textContent = 'Add to Favorite';\n      }\n      return;\n    }\n  }\n}\n\nfunction onColorBtn(favButton, favId, favP, favSvg) {\n  for (const el of getArray()) {\n    if (el.id === favId) {\n      const resultAdd = includeFavoriteNew(el);\n\n      if (resultAdd) {\n        favButton.classList.add('favorite');\n        favP.classList.add('favorite-p');\n        favSvg.classList.add('favorite-svg');\n        favP.textContent = 'Remove from Favorite';\n      }\n      return;\n    }\n  }\n}\n\n// Рзглаживаем вложенные массивы из нашего Л.С. в плоский массив.\nfunction getArray() {\n  let objRead = loadReadStorage();\n  let arrRead = Object.values(objRead).flat();\n\n  return arrRead;\n}\n\n// Функция для вызова заглушки\nfunction renderNoNews(noResultsText) {\n  const noNewsMarkUp = `<li class=\"no-results-wrap\"><p class=\"no-results-text\">${noResultsText}</p><span class=\"no-results-bgr\"></span></li>`;\n  box.innerHTML = noNewsMarkUp;\n}\n"],"names":["parcelRequire","$9Ka1f","document","querySelector","$103c6abfc3a0e310$var$box","$103c6abfc3a0e310$var$loader","$103c6abfc3a0e310$var$createDateBox","date","murkup","insertAdjacentHTML","$103c6abfc3a0e310$var$createMurkupForBoxItem","loadReadStorage","map","el","abstract","title","url","published_date","image_url","section","id","split","reverse","join","$lAcMk","creatCardMarkup","readObj","keys","Object","length","localStorage","setItem","JSON","stringify","location","reload","date1","wrapList","getElementById","murkupForBox","noResultsText1","noNewsMarkUp","innerHTML","$103c6abfc3a0e310$var$renderNoNews","$103c6abfc3a0e310$var$createReadMarkup","setTimeout","classList","add","$103c6abfc3a0e310$var$getArray","objRead","values","flat","querySelectorAll","forEach","dateSpan","addEventListener","this","parentElement","list","toggle","e","target","closest","favButton","favId","dataset","favP","favSvg","contains","$2sH7u","excludeFavoriteNew","remove","textContent","$103c6abfc3a0e310$var$offColorBtn","includeFavoriteNew","$103c6abfc3a0e310$var$onColorBtn"],"version":3,"file":"read-main.92dc6424.js.map"}