{"mappings":"iiBAcA,IAAAA,EAAAC,EAAA,S,uBA4CgCC,G,OAAjBC,EAAgBC,MAAAC,KAAAC,U,EA5C/BC,GAAmBC,MAAK,SAACC,GACvBC,QAAQC,IAAIF,GACZG,EAAWH,E,IAMZI,UAAUC,YAAYC,oBAAmB,SAAAC,GACvCN,QAAQC,IAAIK,EAASC,QAClBD,EAASC,QAAS,EACrB,IAAgCC,EAAAF,EAASC,OAAjCE,EAAwBD,EAAxBC,SAAUC,EAAcF,EAAdE,W,SAqBQC,EAAKC,G,OAAlBC,EAAYnB,MAAAC,KAAAC,U,EAlB1BkB,CAFU,GAAYC,OAATN,GACH,GAAaM,OAAVL,IACUZ,MAAK,SAACC,GAC3BiB,EAAIC,WAAWC,SACflB,QAAQC,IAAIF,GACZG,EAAWH,E,gBAeCc,I,OAAAA,EAAfM,EAAA7B,EAAA,CAAA6B,EAAAC,GAAAC,MAAA,SAAAC,EAA4BX,EAAKC,G,IAC1BW,EACDC,EAIGzB,E,yEALFwB,EAAM,6FAAwGR,OAAXJ,EAAI,SAAWI,OAAJH,EAAI,iB,SAClGa,MAAMF,G,WAAvBC,EAAQE,EAAAC,MACEC,GAAE,C,eACd,MAAM,IAAIC,MAAM,S,uBAEEL,EAASM,O,cAAtB/B,EAAI2B,EAAAC,K,kBACH5B,G,6CAPiBL,MAAAC,KAAAC,U,CASzB,IAAMoB,EAAMe,SAASC,cAAc,a,SAGvBvC,I,OAAAA,EAAf0B,EAAA7B,EAAA,CAAA6B,EAAAC,GAAAC,MAAA,SAAAC,EAAgC9B,G,IAGxBgC,EAIGzB,E,wEANI,4G,SAEU0B,MAFV,6G,WAEPD,EAAQE,EAAAC,MACEC,GAAE,C,eACf,MAAM,IAAIC,MAAM,S,uBAEGL,EAASM,O,cAAtB/B,EAAI2B,EAAAC,K,kBACH5B,G,6CARmBL,MAAAC,KAAAC,U,CAW7B,SAASM,EAAW+B,GAClBjC,QAAQC,IAAIgC,EAAIC,GAAGC,YACpBnC,QAAQC,IAAIgC,EAAIG,IAChBpC,QAAQC,IAAIoC,KAAKC,MAAML,EAAIM,KAAKC,OAChCxC,QAAQC,IAAIgC,EAAIQ,QAAQ,GAAGF,MAC3BvC,QAAQC,IAAIgC,EAAIQ,QAAQ,GAAGC,MAC3B,IAAMF,EAAOH,KAAKC,MAAML,EAAIM,KAAKC,MACjCxC,QAAQC,IAAIgC,EAAIU,MAChB,IAAMC,EAAK,IAAIC,KACf7C,QAAQC,IAAI2C,EAAGE,eACf,IAAMC,EACC,gDAC+BhC,OADiBkB,EAAIG,GAAG,+CAGxBrB,OAFAyB,EAAK,qGAGkBzB,OADvBkB,EAAIQ,QAAQ,GAAGF,KAAK,yEAImBxB,OAHhBkB,EAAIU,KAAK,4HAG2C5B,OAApCkB,EAAIQ,QAAQ,GAAGC,KAAK,kBAC7D3B,OAD6EkB,EAAIe,MAAM,6CAEtFjC,OADD6B,EAAGE,cAAcG,MAAM,EAAG,GAAG,iDACClC,OAA7B6B,EAAGE,cAAcG,MAAM,EAAE,IAAI,iHAGjEjC,EAAIkC,mBAAmB,aAAcH,E","sources":["src/js/weather.js"],"sourcesContent":["//------Tanya,\n //  ============== по умолчанию\n//  async function fetchWeatherCity(q){ \n//   const URL = `http://api.openweathermap.org/data/2.5/weather?APPID=a66723ff7785b663e20297f90d8a0e90&q=Kyiv&units=metric` \n\n//   const response = await fetch(URL);\n//     if (!response.ok) {\n//      throw new Error('Error');\n//     }\n//      const data = await response.json();\n//      return data;\n//   };\n\n\nfetchWeatherCity().then((data) =>{\n  console.log(data);\n  createCard(data);\n})\n\n// ======== запрос разрешения геолокации\n// export default weatherBlock;\n// function weatherBlock(){\n navigator.geolocation.getCurrentPosition(position => {\n   console.log(position.coords)\n  if (position.coords = true) {\n   const { latitude, longitude } = position.coords;\n  let lat = `${latitude}`;\n  let lon = `${longitude}`;\n  fetchWeather(lat, lon).then((data) =>{\n    box.firstChild.remove()\n    console.log(data);\n    createCard(data);\n    \n  });\n\n//  }else {\n//   fetchWeatherCity().then((data) =>{\n//     console.log(data);\n//     createCard(data);\n    \n//   });\n }\n});\n// };\n // ===========  по геолокации\n const KEY = 'а66723ff7785b663e20297f90d8a0e90'\n async function fetchWeather(lat, lon){ \n  const URL = `http://api.openweathermap.org/data/2.5/weather?APPID=a66723ff7785b663e20297f90d8a0e90&lat=${lat}&lon=${lon}&units=metric`\n const response = await fetch(URL);\n   if (!response.ok) {\n     throw new Error('Error');\n   }\n    const data = await response.json();\n    return data;\n   };\n   const box = document.querySelector('.box-news')\n\n //  ============== по умолчанию\nasync function fetchWeatherCity(q){ \n  const URL = `http://api.openweathermap.org/data/2.5/weather?APPID=a66723ff7785b663e20297f90d8a0e90&q=Kyiv&units=metric` \n\n  const response = await fetch(URL);\n    if (!response.ok) {\n     throw new Error('Error');\n    }\n     const data = await response.json();\n     return data;\n  };\n  // ============== CARD\n  function createCard(arr){\n    console.log(arr.dt.toString());\n   console.log(arr.id);\n   console.log(Math.floor(arr.main.temp));\n   console.log(arr.weather[0].main);\n   console.log(arr.weather[0].icon);\n   const temp = Math.floor(arr.main.temp);\n   console.log(arr.name)\n   const d1 = new Date();\n   console.log(d1.toUTCString());\n   const marcup =\n          `<li class=\"box-weather__item box \" data-id= \"${arr.id}\">\n               <p class=\"weather-temp\">${temp}&deg</p>\n             <div class=\"weather-city-group\"> \n               <p class=\"weather-main\">${arr.weather[0].main}</p> \n               <button class=\"btn__select-city\" type=\"submit\">${arr.name}</button>\n             </div>\n        \n             <img class=\"weather-icon\" src=\" http://openweathermap.org/img/wn/${arr.weather[0].icon}@2x.png\" alt=\"${arr.title}\">\n               <p class= weather-day>${d1.toUTCString().slice(0, 3)}</p> \n               <p class= weather-data>${d1.toUTCString().slice(5,17)}</p> \n               <button class=\"weather-week\" type=\"submit\"> weather for week</button>\n           </li>`\n    box.insertAdjacentHTML(\"afterbegin\" ,marcup);\n  } \n \n  \n  function onError(err) {\n    console.error(err);\n  }\n  \n\n\n\n\n\n\n\n// Vika--------\n"],"names":["$bpxeT","parcelRequire","q","$b7c37e8f14632f7d$var$_fetchWeatherCity","apply","this","arguments","$b7c37e8f14632f7d$var$fetchWeatherCity","then","data","console","log","$b7c37e8f14632f7d$var$createCard","navigator","geolocation","getCurrentPosition","position","coords","_coords","latitude","longitude","lat","lon","$b7c37e8f14632f7d$var$_fetchWeather","$b7c37e8f14632f7d$var$fetchWeather","concat","$b7c37e8f14632f7d$var$box","firstChild","remove","$parcel$interopDefault","$2TvXO","mark","_callee","URL","response","fetch","_ctx","sent","ok","Error","json","document","querySelector","arr","dt","toString","id","Math","floor","main","temp","weather","icon","name","d1","Date","toUTCString","marcup","title","slice","insertAdjacentHTML"],"version":3,"file":"index.8a38bf56.js.map"}