{"mappings":"CA0DAA,eAAgCC,GAC9B,MAEMC,QAAiBC,MAFX,6GAGV,IAAKD,EAASE,GACb,MAAM,IAAIC,MAAM,SAGhB,aADmBH,EAASI,M,EAnDjCC,GAAmBC,MAAMC,IACvBC,QAAQC,IAAIF,GACZG,EAAWH,EAAK,IAMjBI,UAAUC,YAAYC,oBAAmBC,IACvCN,QAAQC,IAAIK,EAASC,QAClBD,EAASC,QAAS,EAAM,CAC3B,MAAMC,SAAEA,EAAQC,UAAEA,GAAcH,EAASC,QAqB1CjB,eAA2BoB,EAAKC,GAChC,MAAMC,EAAM,6FAA6FF,SAAWC,iBAC/GnB,QAAiBC,MAAMmB,GAC3B,IAAKpB,EAASE,GACZ,MAAM,IAAIC,MAAM,SAGjB,aADmBH,EAASI,M,EAxB9BiB,CAFU,GAAGL,IACH,GAAGC,KACUX,MAAMC,IAC3Be,EAAIC,WAAWC,SACfhB,QAAQC,IAAIF,GACZG,EAAWH,EAAK,G,KAwBjB,MAAMe,EAAMG,SAASC,cAAc,aAcpC,SAAShB,EAAWiB,GAClBnB,QAAQC,IAAIkB,EAAIC,GAAGC,YACpBrB,QAAQC,IAAIkB,EAAIG,IAChBtB,QAAQC,IAAIsB,KAAKC,MAAML,EAAIM,KAAKC,OAChC1B,QAAQC,IAAIkB,EAAIQ,QAAQ,GAAGF,MAC3BzB,QAAQC,IAAIkB,EAAIQ,QAAQ,GAAGC,MAC3B,MAAMF,EAAOH,KAAKC,MAAML,EAAIM,KAAKC,MACjC1B,QAAQC,IAAIkB,EAAIU,MAChB,MAAMC,EAAK,IAAIC,KACf/B,QAAQC,IAAI6B,EAAGE,eACf,MAAMC,EACC,gDAAgDd,EAAIG,gDACrBI,qGAEAP,EAAIQ,QAAQ,GAAGF,4EACQN,EAAIU,+HAGYV,EAAIQ,QAAQ,GAAGC,qBAAqBT,EAAIe,iDACjFJ,EAAGE,cAAcG,MAAM,EAAG,kDACzBL,EAAGE,cAAcG,MAAM,EAAE,mHAG7DrB,EAAIsB,mBAAmB,aAAcH,E","sources":["src/js/weather.js"],"sourcesContent":["//------Tanya,\n //  ============== по умолчанию\n//  async function fetchWeatherCity(q){ \n//   const URL = `http://api.openweathermap.org/data/2.5/weather?APPID=a66723ff7785b663e20297f90d8a0e90&q=Kyiv&units=metric` \n\n//   const response = await fetch(URL);\n//     if (!response.ok) {\n//      throw new Error('Error');\n//     }\n//      const data = await response.json();\n//      return data;\n//   };\n\n\nfetchWeatherCity().then((data) =>{\n  console.log(data);\n  createCard(data);\n})\n\n// ======== запрос разрешения геолокации\n// export default weatherBlock;\n// function weatherBlock(){\n navigator.geolocation.getCurrentPosition(position => {\n   console.log(position.coords)\n  if (position.coords = true) {\n   const { latitude, longitude } = position.coords;\n  let lat = `${latitude}`;\n  let lon = `${longitude}`;\n  fetchWeather(lat, lon).then((data) =>{\n    box.firstChild.remove()\n    console.log(data);\n    createCard(data);\n    \n  });\n\n//  }else {\n//   fetchWeatherCity().then((data) =>{\n//     console.log(data);\n//     createCard(data);\n    \n//   });\n }\n});\n// };\n // ===========  по геолокации\n const KEY = 'а66723ff7785b663e20297f90d8a0e90'\n async function fetchWeather(lat, lon){ \n  const URL = `http://api.openweathermap.org/data/2.5/weather?APPID=a66723ff7785b663e20297f90d8a0e90&lat=${lat}&lon=${lon}&units=metric`\n const response = await fetch(URL);\n   if (!response.ok) {\n     throw new Error('Error');\n   }\n    const data = await response.json();\n    return data;\n   };\n   const box = document.querySelector('.box-news')\n\n //  ============== по умолчанию\nasync function fetchWeatherCity(q){ \n  const URL = `http://api.openweathermap.org/data/2.5/weather?APPID=a66723ff7785b663e20297f90d8a0e90&q=Kyiv&units=metric` \n\n  const response = await fetch(URL);\n    if (!response.ok) {\n     throw new Error('Error');\n    }\n     const data = await response.json();\n     return data;\n  };\n  // ============== CARD\n  function createCard(arr){\n    console.log(arr.dt.toString());\n   console.log(arr.id);\n   console.log(Math.floor(arr.main.temp));\n   console.log(arr.weather[0].main);\n   console.log(arr.weather[0].icon);\n   const temp = Math.floor(arr.main.temp);\n   console.log(arr.name)\n   const d1 = new Date();\n   console.log(d1.toUTCString());\n   const marcup =\n          `<li class=\"box-weather__item box \" data-id= \"${arr.id}\">\n               <p class=\"weather-temp\">${temp}&deg</p>\n             <div class=\"weather-city-group\"> \n               <p class=\"weather-main\">${arr.weather[0].main}</p> \n               <button class=\"btn__select-city\" type=\"submit\">${arr.name}</button>\n             </div>\n        \n             <img class=\"weather-icon\" src=\" http://openweathermap.org/img/wn/${arr.weather[0].icon}@2x.png\" alt=\"${arr.title}\">\n               <p class= weather-day>${d1.toUTCString().slice(0, 3)}</p> \n               <p class= weather-data>${d1.toUTCString().slice(5,17)}</p> \n               <button class=\"weather-week\" type=\"submit\"> weather for week</button>\n           </li>`\n    box.insertAdjacentHTML(\"afterbegin\" ,marcup);\n  } \n \n  \n  function onError(err) {\n    console.error(err);\n  }\n  \n\n\n\n\n\n\n\n// Vika--------\n"],"names":["async","q","response","fetch","ok","Error","json","$83ee39fa453a4c23$var$fetchWeatherCity","then","data","console","log","$83ee39fa453a4c23$var$createCard","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","lat","lon","URL","$83ee39fa453a4c23$var$fetchWeather","$83ee39fa453a4c23$var$box","firstChild","remove","document","querySelector","arr","dt","toString","id","Math","floor","main","temp","weather","icon","name","d1","Date","toUTCString","marcup","title","slice","insertAdjacentHTML"],"version":3,"file":"index.0aff2fc1.js.map"}