{"mappings":"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","sources":["src/js/read-library.js","src/js/creatCardMarkup.js","src/js/library.js","src/js/read.js"],"sourcesContent":["export function loadReadStorage() {\n  try {\n    const storageRead = localStorage.getItem('read');\n\n    return storageRead === null ? {} : JSON.parse(storageRead);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function writeReadStorage(object) {\n  removeFromReadStorage(object);\n  const readObj = loadReadStorage();\n  const currentDate = getCurrentDate();\n  if (!readObj[currentDate]) {\n    readObj[currentDate] = [];\n  }\n  readObj[currentDate].push(object);\n\n  localStorage.setItem('read', JSON.stringify(readObj));\n}\n\nexport function removeFromReadStorage(obj) {\n  const readObj = loadReadStorage();\n\n  for (key of Object.keys(readObj)) {\n    const indexInArray = readObj[key].findIndex(item => item.id === obj.id);\n    if (indexInArray > -1) {\n      console.log(readObj[key]);\n      readObj[key].splice(indexInArray, 1);\n    }\n  }\n  localStorage.setItem('read', JSON.stringify(readObj));\n}\n\nexport function getCurrentDate() {\n  return new Date().toLocaleString().slice(0, 10).split('.').join('/');\n}","function creatCardMarkup(el) {\n  const {\n    abstract,\n    title,\n    url,\n    published_date,\n    image_url,\n    section,\n    id,\n    favor = false,\n    read = false,\n  } = el;\n\n  return `<li class=\"box-news__item ${read ? 'show' : ''}\" data-id=\"${id}\">\n      <p class=\"box-news__section\">${section}</p>\n          <div class=\"box-news___wrap-reading\">\n            <span class=\"box-news__reading\">Alredy read</span>\n            <svg class=\"icon\" width=\"18\" height=\"18\">\n              <use href=\"#icon-check\"></use>\n            </svg> \n          </div>\n          <button class=\"box-news__favorite-btn ${favor ? 'favorite' : ''}\">\n              <p class=\"box-news__favorite-p\"> ${\n                favor ? 'Remove from Favorite' : 'Add to Favorite'\n              }</p>\n              <svg class=\"box-news__favorite-svg\" width=\"16\" height=\"16\"\">\n                <use href=\"#icon-heart\"></use>\n              </svg>\n            </button>\n          <article>\n            <div class=\"box-news__thumb\">\n              <img class=\"box-news__img\" src=\"${image_url}\" loading=\"lazy\" alt=\"${section}\" width='440'/>\n            </div>\n          <div class=\"box-news__wrap-title\">\n            <h2 class=\"box-news__titel\">\n              ${title}\n            </h2>\n          </div>\n          <div class=\"box-news__wrap-text\">\n            <p class=\"box-news__text\">\n              ${\n                abstract.length > 120\n                  ? abstract.slice(0, 110) + '...'\n                  : abstract\n              }\n            </p>\n          </div>\n          <div class=\"box-news__wrap\">\n            <p class=\"box-news__data\">${published_date}</p>\n            <a href=\"${url}\" class=\"box-news__link\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Read more</a>\n          </div>\n          </article>\n          <div class=\"overlay\"></div>\n        </li>`;\n}\n\nexport { creatCardMarkup };\n","const FAVORITE_STORAGE_KEY = 'Favorite';\n\nexport function includeFavoriteNew(theNew) {\n  try {\n    let curNewsArray = loadAllFavorites();\n    if (\n      typeof curNewsArray !== 'object' ||\n      Array.isArray(curNewsArray) === false\n    ) {\n      curNewsArray = [];\n      console.log(curNewsArray);\n    }\n\n    curNewsArray.unshift(theNew);\n    saveFavorites(curNewsArray);\n    return true;\n  } catch (error) {\n    console.error(error.message);\n    return false;\n  }\n}\n\nexport function excludeFavoriteNew(newId) {\n  try {\n    const curNewsArray = loadAllFavorites();\n    const foundIndex = curNewsArray.findIndex((elm, idx) => elm.id === newId);\n    curNewsArray.splice(foundIndex, 1);\n    saveFavorites(curNewsArray);\n    return true;\n  } catch (error) {\n    console.error(error.message);\n    return false;\n  }\n}\n\nexport function saveFavorites(arr) {\n  const msg = 'Wrong data to save: array with objects is expected.';\n  if (typeof arr !== 'object') {\n    console.log(msg);\n    return;\n  }\n  if (Array.isArray(arr) === false) {\n    console.log(msg);\n    return;\n  }\n  try {\n    const serializedState = JSON.stringify(arr);\n    localStorage.setItem(FAVORITE_STORAGE_KEY, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n}\n\nexport function loadAllFavorites() {\n  try {\n    const serializedState = localStorage.getItem(FAVORITE_STORAGE_KEY);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n","//-------Maks & Serj--------------\nimport {\n  loadReadStorage,\n  removeFromReadStorage,\n  getCurrentDate,\n} from './read-library';\n\nimport { creatCardMarkup } from './creatCardMarkup';\nimport { includeFavoriteNew, excludeFavoriteNew } from './library';\n// import { onButtonFavorite } from './favorite-btn-action';\n\ncreateReadMarkup();\n\nfunction createReadMarkup() {\n  const readObj = loadReadStorage();\n  const keys = Object.keys(readObj);\n\n  for (date of keys) {\n    // console.log(readObj[date]); // массивы объектов по датам\n\n    // Удаление пустого массива из Л.С.\n    if (readObj[date].length === 0) {\n      delete readObj[date];\n\n      localStorage.setItem('read', JSON.stringify(readObj));\n      location.reload();\n    }\n\n    createDateBox(date);\n  }\n  for (date of Object.keys(readObj)) {\n    const box = document.querySelector(`[data-date=\"${date}\"]`);\n    const wrapList = document.getElementById(`${date}`);\n    const murkupForBox = createMurkupForBoxItem();\n\n    //\n\n    wrapList.insertAdjacentHTML('beforeend', murkupForBox.join(''));\n  }\n}\n\nfunction createDateBox(date) {\n  const wrapBox = document.querySelector('.wrap-box');\n  const murkup = `<div data-date=\"${date}\" class=\"dateList-wrap\">\n    <div class=\"span-wrap\">\n      <span class=\"date-span open\">${date}<span class=\"arrow\"></span></span>\n    </div>\n    <ul class=\"wrap-list box-news open\" id=\"${date}\"></ul>\n  </div>`;\n\n  const makeMurkup = wrapBox.insertAdjacentHTML('afterbegin', murkup);\n\n  return;\n}\n// Массив разметки.\nfunction createMurkupForBoxItem() {\n  const readObj = loadReadStorage();\n  const getKeyValue = readObj[date]; //массив из объектов\n\n  const createMurkup = getKeyValue.map(el => {\n    const { abstract, title, url, published_date, image_url, section, id } = el;\n    // const foto = media[0] ? media[0]['media-metadata'][2].url : '';\n    const data = published_date.split('-').reverse().join('/');\n\n    return creatCardMarkup(el);\n  });\n\n  return createMurkup;\n}\n\n// console.log(createMurkupForBoxItem());\n\nconst dateSpans = document.querySelectorAll('.date-span');\ndateSpans.forEach(dateSpan => {\n  dateSpan.addEventListener('click', function () {\n    // Отримати ідентифікатор 'id' елемента <ul> за допомогою атрибуту 'id'\n    const id = this.parentElement.parentElement.querySelector('ul').id;\n    // Отримати елемент <ul> а допомогою ідентифікатора 'id'\n    const list = document.getElementById(id);\n    const arrow = dateSpan.querySelector('.arrow');\n    arrow.classList.toggle('arrow-bot');\n    list.classList.toggle('open');\n    // Змінити стиль елемента <ul>, щоб його приховати або показати(без анімації)\n    // if (list.classList.contains('active')) {\n    //   list.classList.remove('active');\n    // } else {\n    //   list.classList.add('active');\n    // }\n  });\n});\n\n\nconst box = document.querySelector('.wrap-box ');\n// console.log(box);\nbox.addEventListener('click', onButtonFavorite);\n\n// ----------------------------------------------------------\n\nfunction onButtonFavorite(e) {\n  if (e.target.closest('BUTTON')) {\n    // кнопка\n    const favButton = e.target.closest('BUTTON');\n    // ацдишка li\n    const favId = favButton.closest('li').dataset.id;\n    // надпись на кнопке  Add to Favorite\n    const favP = favButton.querySelector('.box-news__favorite-p');\n    // svg\n    const favSvg = favButton.querySelector('.box-news__favorite-svg');\n    console.log(favP);\n\n    if (favButton.classList.contains('favorite')) {\n      offColorBtn(favButton, favId, favP, favSvg);\n    } else {\n      onColorBtn(favButton, favId, favP, favSvg);\n    }\n  }\n}\n\n// Массив объектов getArray\n\nfunction offColorBtn(favButton, favId, favP, favSvg) {\n  for (const el of getArray()) {\n    if (el.id === favId) {\n      const resultDel = excludeFavoriteNew(el.id);\n\n      // const resultDel = true;\n      if (resultDel) {\n        console.log('Удалил');\n        favButton.classList.remove('favorite');\n        favP.classList.remove('favorite-p');\n        favSvg.classList.remove('favorite-svg');\n        favP.textContent = 'Add to Favorite';\n      }\n      return;\n    }\n  }\n}\n\nfunction onColorBtn(favButton, favId, favP, favSvg) {\n  for (const el of getArray()) {\n    if (el.id === favId) {\n      const resultAdd = includeFavoriteNew(el);\n\n      // const resultAdd = true;\n      if (resultAdd) {\n        console.log('Добавил');\n        favButton.classList.add('favorite');\n        favP.classList.add('favorite-p');\n        favSvg.classList.add('favorite-svg');\n        favP.textContent = 'Remove from Favorite';\n      }\n      return;\n    }\n  }\n}\n\nfunction getArray() {\n  let objRead = loadReadStorage();\n  let arrRead = Object.values(objRead).flat();\n\n  return arrRead;\n}\n"],"names":["$7c776d4421e955ca$export$fcf14f7a08ef2738","storageRead","localStorage","getItem","JSON","parse","error","console","log","$d95d1fc007beb27b$export$c2172e452593faf6","el","abstract","title","url","published_date","image_url","section","id","_favor","favor","_read","read","concat","length","slice","$93effc6fc56091ad$var$FAVORITE_STORAGE_KEY","$93effc6fc56091ad$export$d1d03fba418fb01d","theNew","curNewsArray","$93effc6fc56091ad$export$c5cd7ad466e0200e","Array","isArray","unshift","$93effc6fc56091ad$export$ff4b822c9af62a71","message","$93effc6fc56091ad$export$c91e3aec03b75cd3","newId","foundIndex","findIndex","elm","idx","splice","arr","msg","serializedState","stringify","setItem","undefined","$95b4463fc8ac9448$var$createDateBox","date","wrapBox","document","querySelector","murkup","insertAdjacentHTML","$95b4463fc8ac9448$var$createMurkupForBoxItem","map","split","reverse","join","$95b4463fc8ac9448$var$getArray","objRead","Object","values","flat","readObj","keys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","location","reload","err","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","wrapList","getElementById","murkupForBox","err1","$95b4463fc8ac9448$var$createReadMarkup","querySelectorAll","forEach","dateSpan","addEventListener","this","parentElement","list","classList","toggle","e","target","closest","favButton","favId","dataset","favP","favSvg","contains","remove","textContent","$95b4463fc8ac9448$var$offColorBtn","add","$95b4463fc8ac9448$var$onColorBtn"],"version":3,"file":"read-main.71e12ca3.js.map"}