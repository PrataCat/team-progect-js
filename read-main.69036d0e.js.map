{"mappings":"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","sources":["src/js/read-library.js","src/js/creatCardMarkup.js","src/js/library.js","src/js/read.js"],"sourcesContent":["export function loadReadStorage() {\n  try {\n    const storageRead = localStorage.getItem('read');\n\n    return storageRead === null ? {} : JSON.parse(storageRead);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function writeReadStorage(object) {\n  removeFromReadStorage(object);\n  const readObj = loadReadStorage();\n  const currentDate = getCurrentDate();\n  if (!readObj[currentDate]) {\n    readObj[currentDate] = [];\n  }\n  readObj[currentDate].push(object);\n\n  localStorage.setItem('read', JSON.stringify(readObj));\n}\n\nexport function removeFromReadStorage(obj) {\n  const readObj = loadReadStorage();\n\n  for (key of Object.keys(readObj)) {\n    const indexInArray = readObj[key].findIndex(item => item.id === obj.id);\n    if (indexInArray > -1) {\n      console.log(readObj[key]);\n      readObj[key].splice(indexInArray, 1);\n    }\n  }\n  localStorage.setItem('read', JSON.stringify(readObj));\n}\n\nexport function getCurrentDate() {\n  return new Date().toLocaleString().slice(0, 10).split('.').join('/');\n}","function creatCardMarkup(el) {\n  const {\n    abstract,\n    title,\n    url,\n    published_date,\n    image_url,\n    section,\n    id,\n    favor = false,\n    read = false,\n  } = el;\n\n  return `<li class=\"box-news__item ${read ? 'show' : ''}\" data-id=\"${id}\">\n      <p class=\"box-news__section\">${section}</p>\n          <div class=\"box-news___wrap-reading\">\n            <span class=\"box-news__reading\">Alredy read</span>\n            <svg class=\"icon\" width=\"18\" height=\"18\">\n              <use href=\"#icon-check\"></use>\n            </svg> \n          </div>\n          <button class=\"box-news__favorite-btn ${favor ? 'favorite' : ''}\">\n              <p class=\"box-news__favorite-p\"> ${\n                favor ? 'Remove from Favorite' : 'Add to Favorite'\n              }</p>\n              <svg class=\"box-news__favorite-svg\" width=\"16\" height=\"16\"\">\n                <use href=\"#icon-heart\"></use>\n              </svg>\n            </button>\n          <article>\n            <div class=\"box-news__thumb\">\n              <img class=\"box-news__img\" src=\"${image_url}\" loading=\"lazy\" alt=\"${section}\" width='440'/>\n            </div>\n          <div class=\"box-news__wrap-title\">\n            <h2 class=\"box-news__titel\">\n              ${title}\n            </h2>\n          </div>\n          <div class=\"box-news__wrap-text\">\n            <p class=\"box-news__text\">\n              ${\n                abstract.length > 120\n                  ? abstract.slice(0, 110) + '...'\n                  : abstract\n              }\n            </p>\n          </div>\n          <div class=\"box-news__wrap\">\n            <p class=\"box-news__data\">${published_date}</p>\n            <a href=\"${url}\" class=\"box-news__link\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Read more</a>\n          </div>\n          </article>\n          <div class=\"overlay\"></div>\n        </li>`;\n}\n\nexport { creatCardMarkup };\n","const FAVORITE_STORAGE_KEY = 'Favorite';\n\nexport function includeFavoriteNew(theNew) {\n  try {\n    let curNewsArray = loadAllFavorites();\n    if (\n      typeof curNewsArray !== 'object' ||\n      Array.isArray(curNewsArray) === false\n    ) {\n      curNewsArray = [];\n      console.log(curNewsArray);\n    }\n\n    curNewsArray.unshift(theNew);\n    saveFavorites(curNewsArray);\n    return true;\n  } catch (error) {\n    console.error(error.message);\n    return false;\n  }\n}\n\nexport function excludeFavoriteNew(newId) {\n  try {\n    const curNewsArray = loadAllFavorites();\n    const foundIndex = curNewsArray.findIndex((elm, idx) => elm.id === newId);\n    curNewsArray.splice(foundIndex, 1);\n    saveFavorites(curNewsArray);\n    return true;\n  } catch (error) {\n    console.error(error.message);\n    return false;\n  }\n}\n\nexport function saveFavorites(arr) {\n  const msg = 'Wrong data to save: array with objects is expected.';\n  if (typeof arr !== 'object') {\n    console.log(msg);\n    return;\n  }\n  if (Array.isArray(arr) === false) {\n    console.log(msg);\n    return;\n  }\n  try {\n    const serializedState = JSON.stringify(arr);\n    localStorage.setItem(FAVORITE_STORAGE_KEY, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n}\n\nexport function loadAllFavorites() {\n  try {\n    const serializedState = localStorage.getItem(FAVORITE_STORAGE_KEY);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n","//-------Maks & Serj--------------\nimport {\n  loadReadStorage,\n  removeFromReadStorage,\n  getCurrentDate,\n} from './read-library';\n\nimport { creatCardMarkup } from './creatCardMarkup';\nimport { includeFavoriteNew, excludeFavoriteNew } from './library';\n// import { onButtonFavorite } from './favorite-btn-action';\n\ncreateReadMarkup();\n\nfunction createReadMarkup() {\n  const readObj = loadReadStorage();\n  const keys = Object.keys(readObj);\n\n  for (date of keys) {\n    // console.log(readObj[date]); // массивы объектов по датам\n\n    // Удаление пустого массива из Л.С.\n    if (readObj[date].length === 0) {\n      delete readObj[date];\n\n      localStorage.setItem('read', JSON.stringify(readObj));\n      location.reload();\n    }\n\n    createDateBox(date);\n  }\n  for (date of Object.keys(readObj)) {\n    const box = document.querySelector(`[data-date=\"${date}\"]`);\n    const wrapList = document.getElementById(`${date}`);\n    const murkupForBox = createMurkupForBoxItem();\n\n    //\n\n    wrapList.insertAdjacentHTML('beforeend', murkupForBox.join(''));\n  }\n}\n\nfunction createDateBox(date) {\n  const wrapBox = document.querySelector('.wrap-box');\n  const murkup = `<div data-date=\"${date}\" class=\"dateList-wrap\">\n    <div class=\"span-wrap\">\n      <span class=\"date-span open\">${date}<span class=\"arrow\"></span></span>\n    </div>\n    <ul class=\"wrap-list box-news open\" id=\"${date}\"></ul>\n  </div>`;\n\n  const makeMurkup = wrapBox.insertAdjacentHTML('afterbegin', murkup);\n\n  return;\n}\n// Массив разметки.\nfunction createMurkupForBoxItem() {\n  const readObj = loadReadStorage();\n  const getKeyValue = readObj[date]; //массив из объектов\n\n  const createMurkup = getKeyValue.map(el => {\n    const { abstract, title, url, published_date, image_url, section, id } = el;\n    // const foto = media[0] ? media[0]['media-metadata'][2].url : '';\n    const data = published_date.split('-').reverse().join('/');\n\n    return creatCardMarkup(el);\n  });\n\n  return createMurkup;\n}\n\n// console.log(createMurkupForBoxItem());\n\nconst dateSpans = document.querySelectorAll('.date-span');\ndateSpans.forEach(dateSpan => {\n  dateSpan.addEventListener('click', function () {\n    // Отримати ідентифікатор 'id' елемента <ul> за допомогою атрибуту 'id'\n    const id = this.parentElement.parentElement.querySelector('ul').id;\n    // Отримати елемент <ul> а допомогою ідентифікатора 'id'\n    const list = document.getElementById(id);\n    const arrow = dateSpan.querySelector('.arrow');\n    arrow.classList.toggle('arrow-bot');\n    list.classList.toggle('open');\n    // Змінити стиль елемента <ul>, щоб його приховати або показати(без анімації)\n    // if (list.classList.contains('active')) {\n    //   list.classList.remove('active');\n    // } else {\n    //   list.classList.add('active');\n    // }\n  });\n});\n\n\nconst box = document.querySelector('.wrap-box ');\n// console.log(box);\nbox.addEventListener('click', onButtonFavorite);\n\n// ----------------------------------------------------------\n\nfunction onButtonFavorite(e) {\n  if (e.target.closest('BUTTON')) {\n    // кнопка\n    const favButton = e.target.closest('BUTTON');\n    // ацдишка li\n    const favId = favButton.closest('li').dataset.id;\n    // надпись на кнопке  Add to Favorite\n    const favP = favButton.querySelector('.box-news__favorite-p');\n    // svg\n    const favSvg = favButton.querySelector('.box-news__favorite-svg');\n    console.log(favP);\n\n    if (favButton.classList.contains('favorite')) {\n      offColorBtn(favButton, favId, favP, favSvg);\n    } else {\n      onColorBtn(favButton, favId, favP, favSvg);\n    }\n  }\n}\n\n// Массив объектов getArray\n\nfunction offColorBtn(favButton, favId, favP, favSvg) {\n  for (const el of getArray()) {\n    if (el.id === favId) {\n      const resultDel = excludeFavoriteNew(el.id);\n\n      // const resultDel = true;\n      if (resultDel) {\n        console.log('Удалил');\n        favButton.classList.remove('favorite');\n        favP.classList.remove('favorite-p');\n        favSvg.classList.remove('favorite-svg');\n        favP.textContent = 'Add to Favorite';\n      }\n      return;\n    }\n  }\n}\n\nfunction onColorBtn(favButton, favId, favP, favSvg) {\n  for (const el of getArray()) {\n    if (el.id === favId) {\n      const resultAdd = includeFavoriteNew(el);\n\n      // const resultAdd = true;\n      if (resultAdd) {\n        console.log('Добавил');\n        favButton.classList.add('favorite');\n        favP.classList.add('favorite-p');\n        favSvg.classList.add('favorite-svg');\n        favP.textContent = 'Remove from Favorite';\n      }\n      return;\n    }\n  }\n}\n\nfunction getArray() {\n  let objRead = loadReadStorage();\n  let arrRead = Object.values(objRead).flat();\n\n  return arrRead;\n}\n"],"names":["$71802e831ac884a2$export$fcf14f7a08ef2738","storageRead","localStorage","getItem","JSON","parse","error","console","log","$fb66df559654ca3c$export$c2172e452593faf6","el","abstract","title","url","published_date","image_url","section","id","favor","read","length","slice","$1cafa503bc57b7a0$export$d1d03fba418fb01d","theNew","curNewsArray","$1cafa503bc57b7a0$export$c5cd7ad466e0200e","Array","isArray","unshift","$1cafa503bc57b7a0$export$ff4b822c9af62a71","message","$1cafa503bc57b7a0$export$c91e3aec03b75cd3","newId","foundIndex","findIndex","elm","idx","splice","arr","msg","serializedState","stringify","setItem","undefined","$103c6abfc3a0e310$var$createDateBox","date","murkup","document","querySelector","insertAdjacentHTML","$103c6abfc3a0e310$var$createMurkupForBoxItem","map","split","reverse","join","readObj","keys","Object","location","reload","wrapList","getElementById","murkupForBox","$103c6abfc3a0e310$var$createReadMarkup","querySelectorAll","forEach","dateSpan","addEventListener","this","parentElement","list","classList","toggle","$103c6abfc3a0e310$var$getArray","objRead","values","flat","e","target","closest","favButton","favId","dataset","favP","favSvg","contains","remove","textContent","$103c6abfc3a0e310$var$offColorBtn","add","$103c6abfc3a0e310$var$onColorBtn"],"version":3,"file":"read-main.69036d0e.js.map"}