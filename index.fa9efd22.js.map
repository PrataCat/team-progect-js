{"mappings":"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","sources":["src/js/newsApiService.js","src/js/creatCardMarkup.js","src/js/news-list.js"],"sourcesContent":["const API_KEY = 'xiA2oqSwY7oUdkxynOuoZzJzlQ7EJz4s';\n\nconst ArticleSearchEndpoint =\n  'https://api.nytimes.com/svc/search/v2/articlesearch.json';\nconst MostPopularEndpoint = 'https://api.nytimes.com/svc/mostpopular/v2/viewed';\nconst TimesWireEndpoint = 'https://api.nytimes.com/svc/news/v3/content';\n\nasync function getCategories() {\n  try {\n    const response = await fetch(\n      `${TimesWireEndpoint}/section-list.json?api-key=${API_KEY}`\n    );\n    const data = await response.json();\n\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// GET Category articles functions\n\nasync function fetchCategoryArticles(category, limit, offset) {\n  try {\n    const response = await fetch(\n      `${TimesWireEndpoint}/all/${category}.json?api-key=${API_KEY}&limit=${limit}&offset=${offset}`\n    );\n    const data = await response.json();\n\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getCategoryArticles(category, limit = 8, offset = 0) {\n  try {\n    const data = await fetchCategoryArticles(category, limit, offset);\n\n    const normalizedData = data.map(item => {\n      const { title, abstract, published_date, url, section, multimedia, uri } =\n        item;\n      const resultObj = {\n        title,\n        abstract,\n        published_date: dateFormat(published_date),\n        url,\n        section,\n        image_url: multimedia[2].url,\n        id: uri.split('/')[3],\n      };\n      return resultObj;\n    });\n    // console.log(normalizedData);\n    return normalizedData;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// GET Most popular articles functions\n\nasync function fetchMostPopularArticles(days = 7) {\n  try {\n    if (![1, 7, 30].includes(days)) {\n      console.log('incorrect period');\n      return;\n    }\n    const response = await fetch(\n      `${MostPopularEndpoint}/${days}.json?api-key=${API_KEY}`\n    );\n    const data = await response.json();\n\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getMostPopularArticles(days = 7) {\n  try {\n    const data = await fetchMostPopularArticles(days);\n\n    const normalizedData = data.map(item => {\n      const { title, abstract, published_date, url, section, media, uri } =\n        item;\n      const image_url = media[0] ? media[0]['media-metadata'][2].url : '';\n      const resultObj = {\n        title,\n        abstract,\n        published_date: dateFormat(published_date),\n        url,\n        section,\n        image_url,\n        id: uri.split('/')[3],\n      };\n      return resultObj;\n    });\n    // console.log(normalizedData);\n    return normalizedData;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// GET Search articles functions\n\nasync function fetchSearchArticles(query, pub_date, page) {\n  try {\n    const pubDate = pub_date ? `&fq=pub_date:${pub_date}` : '';\n    const response = await fetch(\n      `${ArticleSearchEndpoint}?api-key=${API_KEY}&page=${page}&q=${query}${pubDate}`\n    );\n    const data = await response.json();\n\n    return data.response.docs;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getSearchArticles(query, pub_date, page = 0) {\n  try {\n    const data = await fetchSearchArticles(query, pub_date, page);\n\n    const normalizedData = data.map(item => {\n      const {\n        headline,\n        abstract,\n        pub_date,\n        web_url,\n        subsection_name,\n        multimedia,\n        uri,\n      } = item;\n      const resultObj = {\n        title: headline.main,\n        abstract,\n        published_date: dateFormat(pub_date),\n        url: web_url,\n        section: subsection_name,\n        image_url:\n          'https://static01.nyt.com/' +\n          multimedia.find(item => item.subtype === 'mediumThreeByTwo440').url,\n        id: uri.split('/')[3],\n      };\n      return resultObj;\n    });\n    // console.log(normalizedData)\n    return normalizedData;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction dateFormat(str) {\n  return new Date(str).toLocaleString().slice(0, 10).split('.').join('/');\n}\n\n\n// getCategories();\n// getMostPopularArticles();\n// getCategoryArticles('arts');\n// getSearchArticles('politics');\n\n\nexport { getCategories, getCategoryArticles, getMostPopularArticles, getSearchArticles }\n\n","function creatCardMarkup(el) {\n  const { abstract, title, url, published_date, image_url, section, id } = el;\n\n  return `<li class=\"box-news__item\" data-id=\"${id}\">\n      <p class=\"box-news__section\">${section}</p>\n          <div class=\"box-news___wrap-reading\">\n            <span class=\"box-news__reading\">Alredy read</span>\n            <svg class=\"icon\" width=\"18\" height=\"18\">\n              <use href=\"#icon-check\"></use>\n            </svg> \n          </div>\n          <button id=\"favorite-btn\" class=\"box-news__favorite-btn\">\n              <p id=\"favorite-p\" class=\"box-news__favorite-p\">Add to Favorite</p>\n              <svg class=\"box-news__favorite-svg\" width=\"16\" height=\"16\" id=\"favorite-svg\">\n                <use href=\"#icon-heart\"></use>\n              </svg>\n            </button>\n          <article>\n            <div class=\"box-news__thumb\">\n              <img class=\"box-news__img\" src=\"${image_url}\" loading=\"lazy\" alt=\"${section}\" width='440'/>\n            </div>\n          <div class=\"box-news__wrap-title\">\n            <h2 class=\"box-news__titel\">\n              ${title}\n            </h2>\n          </div>\n          <div class=\"box-news__wrap-text\">\n            <p class=\"box-news__text\">\n              ${\n                abstract.length > 120\n                  ? abstract.slice(0, 110) + '...'\n                  : abstract\n              }\n            </p>\n          </div>\n          <div class=\"box-news__wrap\">\n            <p class=\"box-news__data\">${published_date}</p>\n            <a href=\"${url}\" class=\"box-news__link\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Read more</a>\n          </div>\n          </article>\n          <div class=\"overlay\"></div>\n        </li>`;\n}\n\nexport { creatCardMarkup };\n","// ------------Lyosha, Yura, Dima--------------\nimport { getMostPopularArticles } from './newsApiService';\nimport { creatCardMarkup } from './creatCardMarkup';\n\n// ф - ция проверки апишки поп новостей, возвращает нормализованный массив карточек\n// top();\n// async function top() {\n//   const ddd = await getMostPopularArticles();\n//   console.log(ddd);\n// }\n\n// const dd = creatCardMarkup(123)\n// console.log(dd);\n\nconst box = document.querySelector('.box-news');\n\nlet currentDispleyWidth = checkWidth(); //текущая ширина вью порта\nlet arrCurrentNews = []; //копия массива поп новостей (или по категориям, или по серчу)\nlet page = 1;\nlet perPage = null; // текущая страница (для пагинации)\n\nwindow.addEventListener('resize', onResize);\n\n/*\nосновная ф-ция, создаем стартовую страницу, коллбеком передаем ф-цию \nкоторая возвращает норм. массив поп. новостей (или по категориям, или по серчу)\n*/\ncreateNewsCollection(getMostPopularArticles);\n\nasync function createNewsCollection(func) {\n  // проверяем пустой ли массив \"текущих\" новостей\n\n  if (arrCurrentNews.length === 0) {\n    arrCurrentNews = await func();\n    \n    /* если нет - вызываем апи и заполняем массив \n    соответствующими новостями (по категориям или серчу)\n    */\n  }\n  perPage = cardsPerPage(); // замеряем ширину вью порта\n\n  const arrForMarkup = displayItems(arrCurrentNews, page, perPage); // массив для рендера на текущую страницу\n  const cardMarkupArray = arrForMarkup.map(el => creatCardMarkup(el)); // массив готовой разметки карточек для рендера на текущую страницу\n\n  // // погода cardMarkupArray ('строка разменки погоды') splice(). но условие для мобилки!!!\n  renderBoxNewMarkup(cardMarkupArray); // рендер текущей страницы\n}\n\n// замеряем ширину вью порта и определяем сколько рендрерить\n// карточек на страницу, возвращаеи число для perPage\n\nfunction cardsPerPage() {\n  const width = checkWidth();\n\n  if (width > 1280) {\n    return 8;\n  } else if (width > 768) {\n    return 7;\n  } else {\n    return 4;\n  }\n}\n\n// ф-ци возвращае ширину вью порта\nfunction checkWidth() {\n  return document.documentElement.clientWidth;\n}\n\n// ф-ция возвращает массив карточек для рендера на текущую страницу (из текущуго массива arrCurrentNews)\nfunction displayItems(arr, page, perPage) {\n  const start = (page - 1) * perPage;\n  const end = start + perPage;\n  const paginatedEl = arr.slice(start, end);\n  return paginatedEl;\n}\n\n// ф-ция рендера текущих карточек на страницу\nfunction renderBoxNewMarkup(arr) {\n  box.insertAdjacentHTML('beforeend', arr.join(''));\n  // box.innnerHTML = arr.join('');\n}\n\n/* ф-ция следит за текущей шириной экрана. и если она вышла за брэкпоинты\nстраница рендерится заново для текущей ширины экрана\n*/\nfunction onResize() {\n  if (\n    (currentDispleyWidth < 768 && checkWidth() >= 768) ||\n    (currentDispleyWidth >= 768 &&\n      currentDispleyWidth < 1280 &&\n      (checkWidth() < 768 || checkWidth() >= 1280)) ||\n    (currentDispleyWidth >= 1280 && checkWidth() < 1280)\n  ) {\n    // page += 1;\n    createNewsCollection();\n  }\n}\n\n\n/*********************** button ********************************/\n\nbox.addEventListener('click', onClick);\n\nfunction onClick(e) {\n  e.preventDefault();\n  // const currentId = e.target.closest('li').dataset.id\n  let currentId = null;\n  let currentLi = null;\n  // console.dir(e.target);\n\n  if (e.target.tagName === 'A') {\n    // console.log('Мы нажали на Read more !');\n\n    currentId = e.target.closest('li').dataset.id\n    currentLi = e.target.closest('li')\n\n    console.log(currentLi);\n    console.log('currentId - ', currentId);\n\n    for (const el of arrCurrentNews) {\n      if (el.id === currentId) {\n        console.log('Мы нашли ID и вызываем ф-цию READ (include...)');\n        currentLi.classList.add('active');\n        return;\n      }\n      console.log('Все пропало шеф!!!');\n    }\n  }\n}\n\n/*********************************************************/\nbox.addEventListener('click', onButtonFavorite);\n\nfunction onButtonFavorite(e) {\n  if (e.target.closest('BUTTON')) {\n    const favButton = e.target.closest('BUTTON');\n    // const favLi = favButton.closest('li');\n    const favP = favButton.querySelector('.box-news__favorite-p');\n    const favSvg = favButton.querySelector('.box-news__favorite-svg');\n    favSvg.style.fill = 'none';\n    if (\n      !e.target.closest('BUTTON').classList.contains('box-news__favorite-btn')\n    ) {\n      return;\n    }\n    if (favButton.classList.contains('favorite')) {\n      favButton.classList.remove('favorite');\n      favP.classList.remove('favorite-p');\n      favSvg.classList.remove('favorite-svg');\n      favP.textContent = 'Add to Favorite';\n      favSvg.style.fill = 'none';\n    } else {\n      favButton.classList.add('favorite');\n      favP.classList.add('favorite-p');\n      favSvg.classList.add('favorite-svg');\n      favP.textContent = 'Remove from Favorite';\n      favSvg.style.fill = '#4B48DA';\n    }\n  }\n}\n\n/***********************************************************/"],"names":["$af2b51ed280f3c7d$var$dateFormat","str","Date","toLocaleString","slice","split","join","$fb66df559654ca3c$export$c2172e452593faf6","el","abstract","title","url","published_date","image_url","section","id","length","$b2053f0c68d6ee69$var$box","document","querySelector","$b2053f0c68d6ee69$var$currentDispleyWidth","$b2053f0c68d6ee69$var$checkWidth","$b2053f0c68d6ee69$var$arrCurrentNews","$b2053f0c68d6ee69$var$perPage","async","$b2053f0c68d6ee69$var$createNewsCollection","func","width","$b2053f0c68d6ee69$var$cardsPerPage","arrForMarkup","arr","page1","perPage1","start","end","$b2053f0c68d6ee69$var$displayItems","cardMarkupArray","map","insertAdjacentHTML","documentElement","clientWidth","window","addEventListener","days","data","includes","console","log","response","fetch","json","results","error","$af2b51ed280f3c7d$var$fetchMostPopularArticles","item","media","uri","e","preventDefault","currentId","currentLi","target","tagName","closest","dataset","classList","add","favButton","favP","favSvg","style","fill","contains","remove","textContent"],"version":3,"file":"index.fa9efd22.js.map"}