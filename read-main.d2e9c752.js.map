{"mappings":"gfAAAA,EAAA,SCCA,IAAAC,EAAAD,EAAA,S,0BAWME,EAAWC,SAASC,cAAc,WAClCC,EAAWF,SAASC,cAAc,WAClCE,EAAMH,SAASC,cAAc,cAsCnC,SAASG,EAAcC,GACrB,IAAMC,EAAUN,SAASC,cAAc,aACjCM,EAAS,mBAEoBC,OAFDH,EAAK,8FAIKG,OAFTH,EAAK,gGAESG,OAALH,EAAK,qBAG9BC,EAAQG,mBAAmB,aAAcF,E,CAKhD,SAALG,EAAuBL,GAY9B,OAXgB,EAAAP,EAAAa,mBACYN,GAEKO,KAAI,SAAAC,GACsCA,EAAjEC,SAAiED,EAAvDE,MAAuDF,EAAhDG,IAAzB,IAA8BC,EAA2CJ,EAA3CI,eAA2CJ,EAA3BK,UAA2BL,EAAhBM,QAAgBN,EAAPO,GAErDH,EAAeI,MAAM,KAAKC,UAAUC,KAAK,KAEtD,OAAO,EAAAC,EAAAC,iBAAgBZ,E,IA6FwB,SAA1Ca,IACP,IAAIC,GAAU,EAAA7B,EAAAa,mBAGd,OAFciB,OAAOC,OAAOF,GAASG,M,EAxJvC,WACE,IAAMC,GAAU,EAAAjC,EAAAa,mBACVqB,EAAOJ,OAAOI,KAAKD,GAIS,GAHZH,OAAOI,KAAKD,GAASE,OAOpC,C,IACAC,GAAU,EAAVC,GAAU,EAAVC,OAAUC,E,IAAf,QAAKC,EAAAC,EAAcP,EAAIQ,OAAAC,cAAlBP,GAAAI,EAAAC,EAAUG,QAAAC,MAAVT,GAAU,EAAU,CAApB,IAAM7B,EAANiC,EAAUM,MAGgB,IAAzBb,EAAQ1B,GAAM4B,gBACTF,EAAQ1B,GAEfwC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUjB,IAC5CkB,SAASC,UAGX9C,EAAcC,E,WAVX8B,GAAU,EAAVC,EAAUe,C,aAAVjB,GAAU,MAAVK,EAAUa,QAAVb,EAAUa,Q,YAAVjB,E,MAAAC,C,MAaAiB,GAAU,EAAVC,GAAU,EAAVC,OAAUlB,E,IAAf,QAAKmB,EAAAC,EAAc7B,OAAOI,KAAKD,GAAQS,OAAAC,cAAlCY,GAAAG,EAAAC,EAAUf,QAAAC,MAAVU,GAAU,EAA0B,CAApC,IAAMK,EAANF,EAAUZ,MAEPe,GADM3D,SAASC,cAAc,eAAoBO,OAALkD,EAAK,OACtC1D,SAAS4D,eAAe,GAAQpD,OAALkD,KACtCG,EAAenD,EAAuBgD,GAE5CC,EAASlD,mBAAmB,YAAaoD,EAAatC,KAAK,I,WALxD+B,GAAU,EAAVC,EAAUO,C,aAAVT,GAAU,MAAVI,EAAUL,QAAVK,EAAUL,Q,YAAVE,E,MAAAC,C,QAjBLxD,EAASgE,UAAUC,IAAI,iBACvB9D,EAAS6D,UAAUC,IAAI,iBAuJnBC,EAAe,2DAAyEzD,OAtK5E,8BAsK4E,kDAC9FL,EAAI+D,UAAYD,EAFlB,IACQA,C,CAjKRE,GAmEkBnE,SAASoE,iBAAiB,cAClCC,SAAQ,SAAAC,GAChBA,EAASC,iBAAiB,SAAS,WAEe,IAA1CnD,EAAKoD,KAAKC,cAAcA,cAAcxE,cAAc,MAAMmB,GAE1DsD,EAAO1E,SAAS4D,eAAexC,GACvBkD,EAASrE,cAAc,UAC/B8D,UAAUY,OAAO,aACvBD,EAAKX,UAAUY,OAAO,O,OAW1BxE,EAAIoE,iBAAiB,SAMiC,SAA5BK,GACxB,GAAIA,EAAEC,OAAOC,QAAQ,UAAW,CAExB,IAAAC,EAAYH,EAAEC,OAAOC,QAAQ,UAE7BE,EAAQD,EAAUD,QAAQ,MAAMG,QAAQ7D,GAExC8D,EAAOH,EAAU9E,cAAc,yBAE/BkF,EAASJ,EAAU9E,cAAc,2BACvCmF,QAAQC,IAAIH,GAERH,EAAUhB,UAAUuB,SAAS,YAUvB,SAAOP,EAAWC,EAAOE,EAAMC,G,IACtCjD,GAAQ,EAARC,GAAQ,EAARC,OAAQC,E,IAAb,QAAKC,EAAAC,EAAYb,IAAUc,OAAAC,cAAtBP,GAAAI,EAAAC,EAAQG,QAAAC,MAART,GAAQ,GAAR,IAAMrB,EAANyB,EAAQM,MACX,GAAI/B,EAAGO,KAAO4D,EAWZ,aAVkB,EAAAO,EAAAC,oBAAmB3E,EAAGO,MAItCgE,QAAQC,IAAI,UACNN,EAAIhB,UAAU0B,OAAO,YAC3BP,EAAKnB,UAAU0B,OAAO,cACtBN,EAAOpB,UAAU0B,OAAO,gBACxBP,EAAKQ,YAAc,mB,WAVpBvD,GAAQ,EAARC,EAAQe,C,aAARjB,GAAQ,MAARK,EAAQa,QAARb,EAAQa,Q,YAARjB,E,MAAAC,C,GAVDuD,CAAYZ,EAAWC,EAAOE,EAAMC,GA2B1C,SAAoBJ,EAAWC,EAAOE,EAAMC,G,IACrCjD,GAAQ,EAARC,GAAQ,EAARC,OAAQC,E,IAAb,QAAKC,EAAAC,EAAYb,IAAUc,OAAAC,cAAtBP,GAAAI,EAAAC,EAAQG,QAAAC,MAART,GAAQ,GAAR,IAAMrB,EAANyB,EAAQM,MACX,GAAI/B,EAAGO,KAAO4D,EAWZ,aAVkB,EAAAO,EAAAK,oBAAmB/E,KAInCuE,QAAQC,IAAI,WACLN,EAAGhB,UAAUC,IAAI,YACxBkB,EAAKnB,UAAUC,IAAI,cACnBmB,EAAOpB,UAAUC,IAAI,gBACrBkB,EAAKQ,YAAc,wB,WAVpBvD,GAAQ,EAARC,EAAQe,C,aAARjB,GAAQ,MAARK,EAAQa,QAARb,EAAQa,Q,YAARjB,E,MAAAC,C,GA1BDyD,CAAWd,EAAWC,EAAOE,EAAMC,E","sources":["src/read-main.js","src/js/read.js"],"sourcesContent":["import './js/header';\nimport './js/read';\n","//-------Maks & Serj--------------\nimport {\n  loadReadStorage,\n  removeFromReadStorage,\n  getCurrentDate,\n} from './read-library';\n\nimport { creatCardMarkup } from './creatCardMarkup';\nimport { includeFavoriteNew, excludeFavoriteNew } from './library';\n// import { onButtonFavorite } from './favorite-btn-action';\n\nlet noResultsText = 'The read news list is empty';\nconst footerEl = document.querySelector('.footer');\nconst headerEl = document.querySelector('.header');\nconst box = document.querySelector('.wrap-box ');\n\ncreateReadMarkup();\n\nfunction createReadMarkup() {\n  const readObj = loadReadStorage();\n  const keys = Object.keys(readObj);\n  const emptyreadObj = !Object.keys(readObj).length;\n\n  // Проверка, если пустой объект, то заглушка.\n  if (emptyreadObj) {\n    footerEl.classList.add('footer-margin');\n    headerEl.classList.add('header-margin');\n    renderNoNews(noResultsText);\n  } else {\n    for (const date of keys) {\n      // console.log(readObj[date]); // массивы объектов по датам\n      // Удаление пустого массива из Л.С.\n      if (readObj[date].length === 0) {\n        delete readObj[date];\n\n        localStorage.setItem('read', JSON.stringify(readObj));\n        location.reload();\n      }\n\n      createDateBox(date);\n    }\n\n    for (const date of Object.keys(readObj)) {\n      const box = document.querySelector(`[data-date=\"${date}\"]`);\n      const wrapList = document.getElementById(`${date}`);\n      const murkupForBox = createMurkupForBoxItem(date);\n\n      wrapList.insertAdjacentHTML('beforeend', murkupForBox.join(''));\n    }\n  }\n}\n\nfunction createDateBox(date) {\n  const wrapBox = document.querySelector('.wrap-box');\n  const murkup = `<div data-date=\"${date}\" class=\"dateList-wrap\">\n    <div class=\"span-wrap\">\n      <span class=\"date-span open\">${date}<span class=\"arrow\"></span></span>\n    </div>\n    <ul class=\"wrap-list box-news open\" id=\"${date}\"></ul>\n  </div>`;\n\n  const makeMurkup = wrapBox.insertAdjacentHTML('afterbegin', murkup);\n\n  return;\n}\n// Массив разметки.\nfunction createMurkupForBoxItem(date) {\n  const readObj = loadReadStorage();\n  const getKeyValue = readObj[date]; //массив из объектов\n\n  const createMurkup = getKeyValue.map(el => {\n    const { abstract, title, url, published_date, image_url, section, id } = el;\n    // const foto = media[0] ? media[0]['media-metadata'][2].url : '';\n    const data = published_date.split('-').reverse().join('/');\n\n    return creatCardMarkup(el);\n  });\n\n  return createMurkup;\n}\n\n// console.log(createMurkupForBoxItem());\n\nconst dateSpans = document.querySelectorAll('.date-span');\ndateSpans.forEach(dateSpan => {\n  dateSpan.addEventListener('click', function () {\n    // Отримати ідентифікатор 'id' елемента <ul> за допомогою атрибуту 'id'\n    const id = this.parentElement.parentElement.querySelector('ul').id;\n    // Отримати елемент <ul> а допомогою ідентифікатора 'id'\n    const list = document.getElementById(id);\n    const arrow = dateSpan.querySelector('.arrow');\n    arrow.classList.toggle('arrow-bot');\n    list.classList.toggle('open');\n    // Змінити стиль елемента <ul>, щоб його приховати або показати(без анімації)\n    // if (list.classList.contains('active')) {\n    //   list.classList.remove('active');\n    // } else {\n    //   list.classList.add('active');\n    // }\n  });\n});\n\n// console.log(box);\nbox.addEventListener('click', onButtonFavorite);\n\n// ----------------------------------------------------------\n// Без этих функций сердечки не проставляются на нашей странице\n// если массив посылать в favorite-btn-action, то он конфликтует с присланым массивом из news-list\n\nfunction onButtonFavorite(e) {\n  if (e.target.closest('BUTTON')) {\n    // кнопка\n    const favButton = e.target.closest('BUTTON');\n    // ацдишка li\n    const favId = favButton.closest('li').dataset.id;\n    // надпись на кнопке  Add to Favorite\n    const favP = favButton.querySelector('.box-news__favorite-p');\n    // svg\n    const favSvg = favButton.querySelector('.box-news__favorite-svg');\n    console.log(favP);\n\n    if (favButton.classList.contains('favorite')) {\n      offColorBtn(favButton, favId, favP, favSvg);\n    } else {\n      onColorBtn(favButton, favId, favP, favSvg);\n    }\n  }\n}\n\n// Массив объектов getArray\n\nfunction offColorBtn(favButton, favId, favP, favSvg) {\n  for (const el of getArray()) {\n    if (el.id === favId) {\n      const resultDel = excludeFavoriteNew(el.id);\n\n      // const resultDel = true;\n      if (resultDel) {\n        console.log('Удалил');\n        favButton.classList.remove('favorite');\n        favP.classList.remove('favorite-p');\n        favSvg.classList.remove('favorite-svg');\n        favP.textContent = 'Add to Favorite';\n      }\n      return;\n    }\n  }\n}\n\nfunction onColorBtn(favButton, favId, favP, favSvg) {\n  for (const el of getArray()) {\n    if (el.id === favId) {\n      const resultAdd = includeFavoriteNew(el);\n\n      // const resultAdd = true;\n      if (resultAdd) {\n        console.log('Добавил');\n        favButton.classList.add('favorite');\n        favP.classList.add('favorite-p');\n        favSvg.classList.add('favorite-svg');\n        favP.textContent = 'Remove from Favorite';\n      }\n      return;\n    }\n  }\n}\n\n// Рзглаживаем вложенные массивы из нашего Л.С. в плоский массив.\nfunction getArray() {\n  let objRead = loadReadStorage();\n  let arrRead = Object.values(objRead).flat();\n\n  return arrRead;\n}\n\n// Функция для вызова заглушки\nfunction renderNoNews(noResultsText) {\n  const noNewsMarkUp = `<div class=\"no-results-wrap\"><p class=\"no-results-text\">${noResultsText}</p><span class=\"no-results-bgr\"></span></div>`;\n  box.innerHTML = noNewsMarkUp;\n}\n"],"names":["parcelRequire","$aGx0e","$95b4463fc8ac9448$var$footerEl","document","querySelector","$95b4463fc8ac9448$var$headerEl","$95b4463fc8ac9448$var$box","$95b4463fc8ac9448$var$createDateBox","date","wrapBox","murkup","concat","insertAdjacentHTML","$95b4463fc8ac9448$var$createMurkupForBoxItem","loadReadStorage","map","el","abstract","title","url","published_date","image_url","section","id","split","reverse","join","$iF1nq","creatCardMarkup","$95b4463fc8ac9448$var$getArray","objRead","Object","values","flat","readObj","keys","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","localStorage","setItem","JSON","stringify","location","reload","err","return","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","date1","wrapList","getElementById","murkupForBox","err1","classList","add","noNewsMarkUp","innerHTML","$95b4463fc8ac9448$var$createReadMarkup","querySelectorAll","forEach","dateSpan","addEventListener","this","parentElement","list","toggle","e","target","closest","favButton","favId","dataset","favP","favSvg","console","log","contains","$cHsZg","excludeFavoriteNew","remove","textContent","$95b4463fc8ac9448$var$offColorBtn","includeFavoriteNew","$95b4463fc8ac9448$var$onColorBtn"],"version":3,"file":"read-main.d2e9c752.js.map"}