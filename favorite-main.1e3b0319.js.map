{"mappings":"AAsBO,SAASA,EAAmBC,GACjC,IACE,MAAMC,EAAeC,IACfC,EAAaF,EAAaG,WAAU,CAACC,EAAKC,IAAQD,EAAIE,KAAOP,IAGnE,OAFAC,EAAaO,OAAOL,EAAY,GAChCM,EAAcR,IACP,C,CACP,MAAOS,GAEP,OADAC,QAAQD,MAAMA,EAAME,UACb,C,EAIJ,SAASH,EAAcI,GAC5B,MAAMC,EAAM,sDACZ,GAAmB,iBAARD,EAIX,IAA2B,IAAvBE,MAAMC,QAAQH,GAIlB,IACE,MAAMI,EAAkBC,KAAKC,UAAUN,GACvCO,aAAaC,QA/CY,WA+CkBJ,E,CAC3C,MAAOP,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,MAPzCD,QAAQW,IAAIR,QAJZH,QAAQW,IAAIR,E,CAeT,SAASZ,IACd,IACE,MAAMe,EAAkBG,aAAaG,QAvDZ,YAwDzB,OAA2B,OAApBN,OAA2BO,EAAYN,KAAKO,MAAMR,E,CACzD,MAAOP,GACPC,QAAQD,MAAMA,EAAME,Q,EC7CjB,SAASc,IACd,IACE,MAAMC,EAAcP,aAAaG,QAAQ,QAEzC,OAAuB,OAAhBI,EAAuB,GAAKT,KAAKO,MAAME,E,CAC9C,MAAOjB,GACPC,QAAQW,IAAIZ,E,EChBhB,SAASkB,EAAgBC,GACvB,MAAMC,SAAEA,EAAQC,MAAEA,EAAKC,IAAEA,EAAGC,eAAEA,EAAcC,UAAEA,EAASC,QAAEA,EAAO5B,GAAEA,GAAOsB,EAEnEO,EAiDR,SAAmBC,GACjB,IAAIC,EAASpC,KAAsB,GAE/BqC,EAAUb,KAAqB,GAC/Bc,EAAUC,OAAOC,OAAOH,GAASI,OAErC,MAAMC,EAASN,EAAOO,MAAKC,GAAQT,EAAI9B,KAAOuC,EAAKvC,KAE7CwC,EAAQP,EAAQK,MAAKG,GAAKX,EAAI9B,KAAOyC,EAAEzC,KAE7C,OAAQ0C,OAAS,CACfC,MAAKN,EACLO,OAAMJ,E,CA7DMK,CAAUvB,GAExB,MAAO,6BACLO,EAAMe,KAAO,OAAS,gBACV5C,2CACqB4B,uTAOaC,EAAMc,IAAM,WAAa,wDAE3Dd,EAAMc,IAAM,uBAAyB,iTAQLhB,0BAAkCC,+IAIlEJ,8IAMAD,EAASuB,OAAS,IACdvB,EAASwB,MAAM,EAAG,KAAO,MACzBxB,wHAKoBG,+BACjBD,0L,CCzCvB,MAAMuB,EAAMC,SAASC,cAAc,aAsBnC,SAASC,IACP,MAAMC,EAJCH,SAASI,gBAAgBC,YAMhC,OAAIF,EAAQ,KACH,EACEA,EAAQ,IACV,EAEA,C,CAYX,SAASG,EAA4BjD,GACnC,GAAmB,iBAARA,EACT,OAEF,IAA2B,IAAvBE,MAAMC,QAAQH,GAChB,OAGFkD,QAAUL,IACY,MAChBM,EAjBgE,SAAlDnD,EAAKoD,EAAMF,GAC/B,MAAMG,GAASD,EAAO,GAAKF,EACrBI,EAAMD,EAAQH,EAEpB,OADoBlD,EAAIyC,MAAMY,EAAOC,E,CAchBC,CADElE,IAC4B+D,KAAO,EAAIF,SACxDM,EAAkBL,EAAaM,KAAIzC,GAAMD,EAAgBC,KAE/D0B,EAAIgB,mBAAmB,YAAaF,EAAgBG,KAAK,I,CArD3DjB,EAAIkB,iBAAiB,SAErB,SAAiBC,GAGf,GAAuB,yBAFAA,EAAEC,OAAOC,UAAUC,MAEK,CAC7C,MAAMC,EAAYJ,EAAEC,OAAOI,QAAQ,UAGnChF,EAFc+E,EAAUC,QAAQ,MAAMC,QAAQzE,IAG9CgD,EAAI0B,UAAY,GAChBnB,EAA4B5D,I,KA6ChC4D,EAA4B5D","sources":["src/js/library.js","src/js/read-library.js","src/js/creatCardMarkup.js","src/js/favorite.js"],"sourcesContent":["const FAVORITE_STORAGE_KEY = 'Favorite';\n\nexport function includeFavoriteNew(theNew) {\n  try {\n    let curNewsArray = loadAllFavorites();\n    if (\n      typeof curNewsArray !== 'object' ||\n      Array.isArray(curNewsArray) === false\n    ) {\n      curNewsArray = [];\n      console.log(curNewsArray);\n    }\n\n    curNewsArray.unshift(theNew);\n    saveFavorites(curNewsArray);\n    return true;\n  } catch (error) {\n    console.error(error.message);\n    return false;\n  }\n}\n\nexport function excludeFavoriteNew(newId) {\n  try {\n    const curNewsArray = loadAllFavorites();\n    const foundIndex = curNewsArray.findIndex((elm, idx) => elm.id === newId);\n    curNewsArray.splice(foundIndex, 1);\n    saveFavorites(curNewsArray);\n    return true;\n  } catch (error) {\n    console.error(error.message);\n    return false;\n  }\n}\n\nexport function saveFavorites(arr) {\n  const msg = 'Wrong data to save: array with objects is expected.';\n  if (typeof arr !== 'object') {\n    console.log(msg);\n    return;\n  }\n  if (Array.isArray(arr) === false) {\n    console.log(msg);\n    return;\n  }\n  try {\n    const serializedState = JSON.stringify(arr);\n    localStorage.setItem(FAVORITE_STORAGE_KEY, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n}\n\nexport function loadAllFavorites() {\n  try {\n    const serializedState = localStorage.getItem(FAVORITE_STORAGE_KEY);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n","export function removeFromReadStorage(obj) {\n  const readObj = loadReadStorage();\n\n  for (key of Object.keys(readObj)) {\n    const indexInArray = readObj[key].findIndex(item => item.id === obj.id);\n    if (indexInArray > -1) {\n      console.log(readObj[key]);\n      readObj[key].splice(indexInArray, 1);\n    }\n  }\n  localStorage.setItem('read', JSON.stringify(readObj));\n}\n\nexport function loadReadStorage() {\n  try {\n    const storageRead = localStorage.getItem('read');\n\n    return storageRead === null ? {} : JSON.parse(storageRead);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getCurrentDate() {\n  return new Date().toLocaleString().slice(0, 10).split('.').join('/');\n}\n\nexport function writeReadStorage(object) {\n  removeFromReadStorage(object);\n  const readObj = loadReadStorage();\n  const currentDate = getCurrentDate();\n  if (!readObj[currentDate]) {\n    readObj[currentDate] = [];\n  }\n  readObj[currentDate].push(object);\n\n  localStorage.setItem('read', JSON.stringify(readObj));\n}\n\n\n","import { loadAllFavorites } from './library';\nimport { loadReadStorage } from './read-library';\n\nfunction creatCardMarkup(el) {\n  const { abstract, title, url, published_date, image_url, section, id } = el;\n\n  const flags = checkRead(el);\n\n  return `<li class=\"box-news__item ${\n    flags.read ? 'show' : ''\n  }\" data-id=\"${id}\">\n      <p class=\"box-news__section\">${section}</p>\n          <div class=\"box-news___wrap-reading\">\n            <span class=\"box-news__reading\">Alredy read</span>\n            <svg class=\"icon\" width=\"18\" height=\"18\">\n              <use href=\"#icon-check\"></use>\n            </svg> \n          </div>\n          <button class=\"box-news__favorite-btn ${flags.fav ? 'favorite' : ''}\">\n              <p class=\"box-news__favorite-p\"> ${\n                flags.fav ? 'Remove from Favorite' : 'Add to Favorite'\n              }</p>\n              <svg class=\"box-news__favorite-svg\" width=\"16\" height=\"16\"\">\n                <use href=\"#icon-heart\"></use>\n              </svg>\n            </button>\n          <article>\n            <div class=\"box-news__thumb\">\n              <img class=\"box-news__img\" src=\"${image_url}\" loading=\"lazy\" alt=\"${section}\" width='440'/>\n            </div>\n          <div class=\"box-news__wrap-title\">\n            <h2 class=\"box-news__titel\">\n              ${title}\n            </h2>\n          </div>\n          <div class=\"box-news__wrap-text\">\n            <p class=\"box-news__text\">\n              ${\n                abstract.length > 120\n                  ? abstract.slice(0, 110) + '...'\n                  : abstract\n              }\n            </p>\n          </div>\n          <div class=\"box-news__wrap\">\n            <p class=\"box-news__data\">${published_date}</p>\n            <a href=\"${url}\" class=\"box-news__link\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Read more</a>\n          </div>\n          </article>\n          <div class=\"overlay\"></div>\n        </li>`;\n}\n\nexport { creatCardMarkup };\n\nfunction checkRead(obj) {\n  let arrFav = loadAllFavorites() || [];\n\n  let objRead = loadReadStorage() || {};\n  let arrRead = Object.values(objRead).flat();\n\n  const answer = arrFav.find(item => obj.id === item.id);\n\n  const reply = arrRead.find(i => obj.id === i.id);\n\n  return (rezult = {\n    fav: answer ? true : false,\n    read: reply ? true : false,\n  });\n}\n","//------------Oleksiy Zhuravlev-----------\n\nimport { excludeFavoriteNew, loadAllFavorites } from './library.js';\nimport { creatCardMarkup } from './creatCardMarkup';\n\nconst box = document.querySelector('.box-news');\n\nbox.addEventListener('click', onClick);\n\nfunction onClick(e) {\n  const curTargetClass = e.target.classList.value;\n\n  if (curTargetClass === 'box-news__favorite-p') {\n    const favButton = e.target.closest('BUTTON');\n    const favId = favButton.closest('li').dataset.id;\n\n    excludeFavoriteNew(favId);\n    box.innerHTML = '';\n    createPopularNewsCollection(loadAllFavorites());\n  }\n}\n\n// ф-ци возвращае ширину вью порта\nfunction checkWidth() {\n  return document.documentElement.clientWidth;\n}\n\nfunction cardsPerPage() {\n  const width = checkWidth();\n\n  if (width > 1280) {\n    return 8;\n  } else if (width > 768) {\n    return 7;\n  } else {\n    return 4;\n  }\n}\n\n// ф-ция возвращает массив карточек для рендера на текущую страницу (из текущуго массива arrCurrentNews)\nfunction displayItems(arr, page, perPage) {\n  const start = (page - 1) * perPage;\n  const end = start + perPage;\n  const paginatedEl = arr.slice(start, end);\n  return paginatedEl;\n}\n\nfunction createPopularNewsCollection(arr) {\n  if (typeof arr !== 'object') {\n    return;\n  }\n  if (Array.isArray(arr) === false) {\n    return;\n  }\n\n  perPage = cardsPerPage(); // замеряем ширину вью порта\n  const arrCurrentNews = loadAllFavorites();\n  const arrForMarkup = displayItems(arrCurrentNews, (page = 1), perPage); // массив для рендера на текущую страницу\n  const cardMarkupArray = arrForMarkup.map(el => creatCardMarkup(el)); // массив готовой разметки карточек для рендера на текущую страницу\n\n  box.insertAdjacentHTML('beforeend', cardMarkupArray.join(''));\n}\n\ncreatePopularNewsCollection(loadAllFavorites());\n"],"names":["$1cafa503bc57b7a0$export$c91e3aec03b75cd3","newId","curNewsArray","$1cafa503bc57b7a0$export$c5cd7ad466e0200e","foundIndex","findIndex","elm","idx","id","splice","$1cafa503bc57b7a0$export$ff4b822c9af62a71","error","console","message","arr","msg","Array","isArray","serializedState","JSON","stringify","localStorage","setItem","log","getItem","undefined","parse","$71802e831ac884a2$export$fcf14f7a08ef2738","storageRead","$fb66df559654ca3c$export$c2172e452593faf6","el","abstract","title","url","published_date","image_url","section","flags","obj","arrFav","objRead","arrRead","Object","values","flat","answer","find","item","reply","i","rezult","fav","read","$fb66df559654ca3c$var$checkRead","length","slice","$f2b37c882cc80f12$var$box","document","querySelector","$f2b37c882cc80f12$var$cardsPerPage","width","documentElement","clientWidth","$f2b37c882cc80f12$var$createPopularNewsCollection","perPage","arrForMarkup","page","start","end","$f2b37c882cc80f12$var$displayItems","cardMarkupArray","map","insertAdjacentHTML","join","addEventListener","e","target","classList","value","favButton","closest","dataset","innerHTML"],"version":3,"file":"favorite-main.1e3b0319.js.map"}